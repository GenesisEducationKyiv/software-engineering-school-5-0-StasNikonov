version: '3.8'

services:
  weather-service:
    build: ./apps/weather-service
    ports:
      - '50051:50051'
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - backend
    volumes:
      - ./apps/proto:/proto

  subscription-service:
    build: ./apps/subscription-service
    ports:
      - '50052:50052'
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - backend
    volumes:
      - ./apps/proto:/proto

  mailer-service:
    build: ./apps/mailer-service
    ports:
      - '50053:50053'
    env_file:
      - .env
    networks:
      - backend
    volumes:
      - ./apps/proto:/proto

  api-gateway:
    build: ./apps/api-gateway
    ports:
      - '3001:3001'
    depends_on:
      - subscription-service
      - weather-service
      - mailer-service
    env_file:
      - .env
    networks:
      - backend
    volumes:
      - ./apps/proto:/proto

  postgres:
    image: postgres:14
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7
    restart: always
    ports:
      - '6379:6379'
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
